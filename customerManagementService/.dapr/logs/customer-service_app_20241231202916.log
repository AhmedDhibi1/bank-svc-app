== APP - customer-service == [nodemon] 3.1.9
== APP - customer-service == [nodemon] to restart at any time, enter `rs`
== APP - customer-service == [nodemon] watching path(s): *.*
== APP - customer-service == [nodemon] watching extensions: js,mjs,cjs,json
== APP - customer-service == [nodemon] starting `node app.js`
== APP - customer-service == Server is listening on PORT: 8081
== APP - customer-service == Failed to send SMS: AxiosError [AggregateError]
== APP - customer-service ==     at AxiosError.from (/home/iheb/Documents/Projects/bank-svc-app/customerManagementService/node_modules/axios/dist/node/axios.cjs:877:14)
== APP - customer-service ==     at RedirectableRequest.handleRequestError (/home/iheb/Documents/Projects/bank-svc-app/customerManagementService/node_modules/axios/dist/node/axios.cjs:3163:25)
== APP - customer-service ==     at RedirectableRequest.emit (node:events:519:28)
== APP - customer-service ==     at eventHandlers.<computed> (/home/iheb/Documents/Projects/bank-svc-app/customerManagementService/node_modules/follow-redirects/index.js:49:24)
== APP - customer-service ==     at ClientRequest.emit (node:events:519:28)
== APP - customer-service ==     at emitErrorEvent (node:_http_client:108:11)
== APP - customer-service ==     at Socket.socketErrorListener (node:_http_client:511:5)
== APP - customer-service ==     at Socket.emit (node:events:519:28)
== APP - customer-service ==     at emitErrorNT (node:internal/streams/destroy:169:8)
== APP - customer-service ==     at emitErrorCloseNT (node:internal/streams/destroy:128:3)
== APP - customer-service ==     at Axios.request (/home/iheb/Documents/Projects/bank-svc-app/customerManagementService/node_modules/axios/dist/node/axios.cjs:4252:41)
== APP - customer-service ==     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
== APP - customer-service ==     at async sendSMS (/home/iheb/Documents/Projects/bank-svc-app/customerManagementService/app.js:43:5)
== APP - customer-service ==     at async handleTransactionCompletion (/home/iheb/Documents/Projects/bank-svc-app/customerManagementService/app.js:68:5) {
== APP - customer-service ==   code: 'ECONNREFUSED',
== APP - customer-service ==   errors: [
== APP - customer-service ==     Error: connect ECONNREFUSED ::1:3510
== APP - customer-service ==         at createConnectionError (node:net:1648:14)
== APP - customer-service ==         at afterConnectMultiple (node:net:1678:16) {
== APP - customer-service ==       errno: -111,
== APP - customer-service ==       code: 'ECONNREFUSED',
== APP - customer-service ==       syscall: 'connect',
== APP - customer-service ==       address: '::1',
== APP - customer-service ==       port: 3510
== APP - customer-service ==     },
== APP - customer-service ==     Error: connect ECONNREFUSED 127.0.0.1:3510
== APP - customer-service ==         at createConnectionError (node:net:1648:14)
== APP - customer-service ==         at afterConnectMultiple (node:net:1678:16) {
== APP - customer-service ==       errno: -111,
== APP - customer-service ==       code: 'ECONNREFUSED',
== APP - customer-service ==       syscall: 'connect',
== APP - customer-service ==       address: '127.0.0.1',
== APP - customer-service ==       port: 3510
== APP - customer-service ==     }
== APP - customer-service ==   ],
== APP - customer-service ==   config: {
== APP - customer-service ==     transitional: {
== APP - customer-service ==       silentJSONParsing: true,
== APP - customer-service ==       forcedJSONParsing: true,
== APP - customer-service ==       clarifyTimeoutError: false
== APP - customer-service ==     },
== APP - customer-service ==     adapter: [ 'xhr', 'http', 'fetch' ],
== APP - customer-service ==     transformRequest: [ [Function: transformRequest] ],
== APP - customer-service ==     transformResponse: [ [Function: transformResponse] ],
== APP - customer-service ==     timeout: 0,
== APP - customer-service ==     xsrfCookieName: 'XSRF-TOKEN',
== APP - customer-service ==     xsrfHeaderName: 'X-XSRF-TOKEN',
== APP - customer-service ==     maxContentLength: -1,
== APP - customer-service ==     maxBodyLength: -1,
== APP - customer-service ==     env: { FormData: [Function], Blob: [class Blob] },
== APP - customer-service ==     validateStatus: [Function: validateStatus],
== APP - customer-service ==     headers: Object [AxiosHeaders] {
== APP - customer-service ==       Accept: 'application/json, text/plain, */*',
== APP - customer-service ==       'Content-Type': 'application/json',
== APP - customer-service ==       'User-Agent': 'axios/1.7.9',
== APP - customer-service ==       'Content-Length': '122',
== APP - customer-service ==       'Accept-Encoding': 'gzip, compress, deflate, br'
== APP - customer-service ==     },
== APP - customer-service ==     method: 'post',
== APP - customer-service ==     url: 'http://localhost:3510/v1.0/bindings/twilio-sms',
== APP - customer-service ==     data: '{"to":"+21628803469","from":"+12316679128","body":"Transaction Successful! Amount: 100, Date: 2024-12-31T17:51:59.748421"}'
== APP - customer-service ==   },
== APP - customer-service ==   request: <ref *1> Writable {
== APP - customer-service ==     _events: {
== APP - customer-service ==       close: undefined,
== APP - customer-service ==       error: [Function: handleRequestError],
== APP - customer-service ==       prefinish: undefined,
== APP - customer-service ==       finish: undefined,
== APP - customer-service ==       drain: undefined,
== APP - customer-service ==       response: [Function: handleResponse],
== APP - customer-service ==       socket: [Function: handleRequestSocket]
== APP - customer-service ==     },
== APP - customer-service ==     _writableState: WritableState {
== APP - customer-service ==       highWaterMark: 16384,
== APP - customer-service ==       length: 0,
== APP - customer-service ==       corked: 0,
== APP - customer-service ==       onwrite: [Function: bound onwrite],
== APP - customer-service ==       writelen: 0,
== APP - customer-service ==       bufferedIndex: 0,
== APP - customer-service ==       pendingcb: 0,
== APP - customer-service ==       [Symbol(kState)]: 17580812,
== APP - customer-service ==       [Symbol(kBufferedValue)]: null
== APP - customer-service ==     },
== APP - customer-service ==     _maxListeners: undefined,
== APP - customer-service ==     _options: {
== APP - customer-service ==       maxRedirects: 21,
== APP - customer-service ==       maxBodyLength: Infinity,
== APP - customer-service ==       protocol: 'http:',
== APP - customer-service ==       path: '/v1.0/bindings/twilio-sms',
== APP - customer-service ==       method: 'POST',
== APP - customer-service ==       headers: [Object: null prototype],
== APP - customer-service ==       agents: [Object],
== APP - customer-service ==       auth: undefined,
== APP - customer-service ==       family: undefined,
== APP - customer-service ==       beforeRedirect: [Function: dispatchBeforeRedirect],
== APP - customer-service ==       beforeRedirects: [Object],
== APP - customer-service ==       hostname: 'localhost',
== APP - customer-service ==       port: '3510',
== APP - customer-service ==       agent: undefined,
== APP - customer-service ==       nativeProtocols: [Object],
== APP - customer-service ==       pathname: '/v1.0/bindings/twilio-sms'
== APP - customer-service ==     },
== APP - customer-service ==     _ended: false,
== APP - customer-service ==     _ending: true,
== APP - customer-service ==     _redirectCount: 0,
== APP - customer-service ==     _redirects: [],
== APP - customer-service ==     _requestBodyLength: 122,
== APP - customer-service ==     _requestBodyBuffers: [ [Object] ],
== APP - customer-service ==     _eventsCount: 3,
== APP - customer-service ==     _onNativeResponse: [Function (anonymous)],
== APP - customer-service ==     _currentRequest: ClientRequest {
== APP - customer-service ==       _events: [Object: null prototype],
== APP - customer-service ==       _eventsCount: 7,
== APP - customer-service ==       _maxListeners: undefined,
== APP - customer-service ==       outputData: [],
== APP - customer-service ==       outputSize: 0,
== APP - customer-service ==       writable: true,
== APP - customer-service ==       destroyed: false,
== APP - customer-service ==       _last: false,
== APP - customer-service ==       chunkedEncoding: false,
== APP - customer-service ==       shouldKeepAlive: true,
== APP - customer-service ==       maxRequestsOnConnectionReached: false,
== APP - customer-service ==       _defaultKeepAlive: true,
== APP - customer-service ==       useChunkedEncodingByDefault: true,
== APP - customer-service ==       sendDate: false,
== APP - customer-service ==       _removedConnection: false,
== APP - customer-service ==       _removedContLen: false,
== APP - customer-service ==       _removedTE: false,
== APP - customer-service ==       strictContentLength: false,
== APP - customer-service ==       _contentLength: '122',
== APP - customer-service ==       _hasBody: true,
== APP - customer-service ==       _trailer: '',
== APP - customer-service ==       finished: false,
== APP - customer-service ==       _headerSent: true,
== APP - customer-service ==       _closed: false,
== APP - customer-service ==       socket: [Socket],
== APP - customer-service ==       _header: 'POST /v1.0/bindings/twilio-sms HTTP/1.1\r\n' +
== APP - customer-service ==         'Accept: application/json, text/plain, */*\r\n' +
== APP - customer-service ==         'Content-Type: application/json\r\n' +
== APP - customer-service ==         'User-Agent: axios/1.7.9\r\n' +
== APP - customer-service ==         'Content-Length: 122\r\n' +
== APP - customer-service ==         'Accept-Encoding: gzip, compress, deflate, br\r\n' +
== APP - customer-service ==         'Host: localhost:3510\r\n' +
== APP - customer-service ==         'Connection: keep-alive\r\n' +
== APP - customer-service ==         '\r\n',
== APP - customer-service ==       _keepAliveTimeout: 0,
== APP - customer-service ==       _onPendingData: [Function: nop],
== APP - customer-service ==       agent: [Agent],
== APP - customer-service ==       socketPath: undefined,
== APP - customer-service ==       method: 'POST',
== APP - customer-service ==       maxHeaderSize: undefined,
== APP - customer-service ==       insecureHTTPParser: undefined,
== APP - customer-service ==       joinDuplicateHeaders: undefined,
== APP - customer-service ==       path: '/v1.0/bindings/twilio-sms',
== APP - customer-service ==       _ended: false,
== APP - customer-service ==       res: null,
== APP - customer-service ==       aborted: false,
== APP - customer-service ==       timeoutCb: [Function: emitRequestTimeout],
== APP - customer-service ==       upgradeOrConnect: false,
== APP - customer-service ==       parser: null,
== APP - customer-service ==       maxHeadersCount: null,
== APP - customer-service ==       reusedSocket: false,
== APP - customer-service ==       host: 'localhost',
== APP - customer-service ==       protocol: 'http:',
== APP - customer-service ==       _redirectable: [Circular *1],
== APP - customer-service ==       [Symbol(shapeMode)]: false,
== APP - customer-service ==       [Symbol(kCapture)]: false,
== APP - customer-service ==       [Symbol(kBytesWritten)]: 0,
== APP - customer-service ==       [Symbol(kNeedDrain)]: false,
== APP - customer-service ==       [Symbol(corked)]: 0,
== APP - customer-service ==       [Symbol(kOutHeaders)]: [Object: null prototype],
== APP - customer-service ==       [Symbol(errored)]: null,
== APP - customer-service ==       [Symbol(kHighWaterMark)]: 16384,
== APP - customer-service ==       [Symbol(kRejectNonStandardBodyWrites)]: false,
== APP - customer-service ==       [Symbol(kUniqueHeaders)]: null
== APP - customer-service ==     },
== APP - customer-service ==     _currentUrl: 'http://localhost:3510/v1.0/bindings/twilio-sms',
== APP - customer-service ==     [Symbol(shapeMode)]: true,
== APP - customer-service ==     [Symbol(kCapture)]: false
== APP - customer-service ==   },
== APP - customer-service ==   cause: AggregateError [ECONNREFUSED]: 
== APP - customer-service ==       at internalConnectMultiple (node:net:1118:18)
== APP - customer-service ==       at afterConnectMultiple (node:net:1685:7) {
== APP - customer-service ==     code: 'ECONNREFUSED',
== APP - customer-service ==     [errors]: [ [Error], [Error] ]
== APP - customer-service ==   }
== APP - customer-service == }
== APP - customer-service == Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'customers' AND TABLE_SCHEMA = 'customers'
== APP - customer-service == Executing (default): SHOW INDEX FROM `customers`
== APP - customer-service == Models synchronized with the database.
The App process exited with error code: exit status 130
